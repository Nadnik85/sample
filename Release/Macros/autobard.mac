|------------------------------|
|---AUTO-BARD by Noobhaxor-----|
|--------Version 2.4.2 --------|
|-----September Update --------|

#turbo 80
#Event Buff 			"Your #1# spell has worn off of #*#."
#include autosubs.inc

Sub Main
	/doevents flush
	/declare MacroName       string outer AutoBard
	/declare IniFileName     string outer ${MacroName}_${Me.CleanName}.ini
|-Declare spell variables
	/if (${Me.AltAbility[Mnemonic Retention].Rank}==4) {
		/declare spellmisc	int outer 12
        /declare spellslots int outer 11
	} else /if (${Me.AltAbility[Mnemonic Retention].Rank}==3) {
		/declare spellmisc 	int outer 11
        /declare spellslots int outer 10
	} else /if (${Me.AltAbility[Mnemonic Retention].Rank}==2) {
		/declare spellmisc 	int outer 10
        /declare spellslots int outer 9
	} else /if (${Me.AltAbility[Mnemonic Retention].Rank}==1) {
		/declare spellmisc 	int outer 9
        /declare spellslots int outer 8
	} else {
		/declare spellmisc 	int outer 8
		/declare spellslots int outer 7
	}
	/declare spellgem		int outer 1
|Declare Songs
	/declare aurasong		string outer NULL
	/declare regensong		string outer NULL
	/declare song1			string outer NULL
	/declare song2			string outer NULL
	/declare song3			string outer NULL
	/declare song4			string outer NULL
	/declare song5			string outer NULL
	/declare slowsong		string outer NULL
	/declare bmsong			string outer NULL
	/declare aoemezsong		string outer NULL
	/declare aeslowsong		string outer NULL
	/if (!${Defined[castready]}) /declare castready timer outer 0
	/declare bmsongtimer	timer outer 0
	/declare aeslowtimer	timer outer 0
	/declare epicsword		string outer NULL
	/declare darksword		string outer NULL
	/if (${FindItem[Darkened Breath of Harmony].ID}) {
		/varset darksword Darkened Breath of Harmony
	}
	/if (${FindItem[Prismatic Dragon Blade].ID}) {
		/varset epicsword Prismatic Dragon Blade
	} else /if (${FindItem[Blade of Vesagran].ID}) {
		/varset epicsword Blade of Vesagran
	}
	/call VarSetup
|-Config Options
	/call LoadIni General FollowToonName string NULL
	/call LoadIni General UseFellowship 	int 0
	/call LoadIni General UseMelee		 	int 1
	/call LoadIni General UseSlow 			int 1
	/call LoadIni General UseMez 			int 1
	/call LoadIni General InstantRelease 	int 0
	/call LoadIni General AutoCampHold		int 1
	/call LoadIni General AutoAssistAt		int 98
	/call LoadIni General BringYourOwnSpells	int 0
	/noparse /alias /byos /multiline ; /varset changetoini 1 ; /docommand ${If[${BringYourOwnSpells}==1,/varset BringYourOwnSpells 0,/varset BringYourOwnSpells 1]} ; /echo Toggling Bring Your Own Spells to ${If[${BringYourOwnSpells}==0,OFF,ON]}
	/call AliasSetup
	/call AutoVersionCheck 5
	/call SetupSongs
|----------------------------------------------------------------------------
| MainLoop
|---------------------------------------------------------------------------- 
:mainloop
/if (${changetoini}==1) /call INIChanges
/if (${Me.Zoning}) /call Zoning
/if (${Me.Hovering}) /call DeathSub
/if (!${Me.XTarget[1].ID}&&!${Me.Invis}) /call DowntimeSongs
/if (${Me.XTarget[1].ID}) /call FindTarget
/if (${Me.XTarget[1].ID}&&${Me.Combat}&&${UseMelee}==1) /call EngageTarget
/if (${Me.XTarget}>1&&${UseMez}==1) /call AESongs
/if (${Me.XTarget[1].ID} && ${castready}==0) /call CombatSongs
/if (${Me.XTarget[1].ID} && (${Me.XTarget}>3 || ${Target.Named}) && ${Target.ID}==${autotargetid}) /call BardBurn
/if (!${Me.XTarget[1].ID}) /call AutoCampCheck
/call SitCheck
/doevents
/goto :mainloop
/return
|----------------------------------------------------------------------------
| SUB: BardBurn
|---------------------------------------------------------------------------- 
Sub BardBurn
	/if (${FindItem[${epicsword}].ID} && ${FindItem[${epicsword}].Timer}==0) /call ItemNow "${epicsword}"
	/if (${Me.AltAbilityReady[Quick Time]}) /call AANow 3702
|--Third Spire
	/if (${Me.AltAbilityReady[1422]}) /call AANow 1422
	/if (${Me.AltAbilityReady[Funeral Dirge]}) /call AANow 777
|	/if (${Me.AltAbilityReady[Bladed Song]}) /call AANow 669
	/if (${Me.AltAbilityReady[Dance of Blades]}) /call AANow 359
	/if (${Me.CombatAbilityReady[Thousand Blades]}) /call DiscNow "Thousand Blades"
/return
|----------------------------------------------------------------------------
| SUB: AESongs
|---------------------------------------------------------------------------- 
Sub AESongs
	/if (${Me.XTarget}>1 && ${SpawnCount[NPC radius 30]}>1 &&${Me.GemTimer[${aoemezsong}]}==0&& ${castready}==0&&${Me.CurrentMana}>${Spell[${aoemezsong}].Mana}&&${Me.Gem[${aoemezsong}]}) {
		/call SongQueue "${aoemezsong}"
	}
/return

|----------------------------------------------------------------------------
| SUB: CombatSongs
|---------------------------------------------------------------------------- 
Sub CombatSongs
|In Combat 
	/if (${Me.CombatAbilityReady["Reflexive Rejoinder"]}&& ${Me.PctEndurance}>10 && ${Group.Member[${Spawn[group cleric].CleanName}].PctMana}<50 && ${Group.Member[${Spawn[group cleric].CleanName}].PctMana}>=1) {
		/docommand /doability "Reflexive Rejoinder"
		/delay 8 !${Me.CombatAbilityReady["Reflexive Rejoinder"]}
	}
	/if (${Target.Type.Equal[NPC]} && ${Target.Distance}<150&&${Me.GemTimer[${slowsong}]}==0 && !${Spell[${Target.Buff[${slowsong}]}].ID}&&${UseSlow}&&${Me.Gem[${slowsong}]}) {
		/call SongQueue "${slowsong}"
	} else /if (${Me.GemTimer[${bmsong}]}==0&&${bmsongtimer}==0&&${Me.Gem[${bmsong}]}) {
		/call SongQueue "${bmsong}"
		/varset bmsongtimer 1m
	} else /if (${FindItem[${darksword}].ID} && ${FindItem[${darksword}].Timer}==0 && ${Me.Song[Doben's Spry Sonata Rk. II].Duration}<4000) {
		/call ItemNow "${darksword}"
	} else /if (${Me.GemTimer[${song1}]}==0&&${Me.Song[${song1}].Duration}<4000&&${Me.CurrentMana}>${Spell[${song1}].Mana}&&${Me.Gem[${song1}]}) {
		/call SongQueue "${song1}"
	} else /if (${Me.GemTimer[${song2}]}==0&&${Me.Song[${song2}].Duration}<4000&&${Me.CurrentMana}>${Spell[${song2}].Mana}&&${Me.Gem[${song2}]}) {
		/call SongQueue "${song2}"
	} else /if (${Me.GemTimer[${song3}]}==0&&${Me.Song[${song3}].Duration}<4000&&${Me.CurrentMana}>${Spell[${song3}].Mana}&&${Me.Gem[${song3}]}) {
		/call SongQueue "${song3}"
	} else /if (${Me.GemTimer[${song4}]}==0&&${Me.Song[${song4}].Duration}<4000&&${Me.CurrentMana}>${Spell[${song4}].Mana}&&${Me.Gem[${song4}]}) {
		/call SongQueue "${song4}"
	} else /if (${Me.GemTimer[${song5}]}==0&&${Me.Song[${song5}].Duration}<4000&&${Me.CurrentMana}>${Spell[${song5}].Mana}&&${Me.Gem[${song5}]}) {
		/call SongQueue "${song5}"
	}
/return
|----------------------------------------------------------------------------
| SUB: DowntimeSongs
|---------------------------------------------------------------------------- 
Sub DowntimeSongs
|Out of Combat
	/if (!${Spell[${Me.Aura[1]}].ID} && !${Me.Moving} && !${Me.Invis} && !${Me.Sitting} && ${Me.State.NotEqual[FEIGN]}&&${castready}==0&&!${Me.Combat}&&${Me.XTarget}==0&&${Me.Gem[${aurasong}]}) {
		/call SongQueue "${aurasong}"
	} else /if (${Me.PctMana}>80&&${Group}&&${Me.GemTimer[${regensong}]}==0&&!${Me.Invis}&& !${Me.Sitting}&&${castready}==0&&!${Me.Combat}&&${Me.XTarget}==0&&(${Spawn[group healer].PctMana}<80||${Spawn[group tank].PctMana}<80)&&${Me.Gem[${regensong}]}) {
		/call SongQueue "${regensong}"
	} else /if (${Select[${Me.Casting.ID},${Spell[${song1}].ID},${Spell[${song3}].ID},${Spell[${song4}].ID},${Spell[${song2}].ID},${Spell[${song5}].ID}]}>0&& !${Me.Invis}&&!${Me.Combat}&&${Me.XTarget}==0) {
		/stopcast 
	} else /if (${Spell[Selo's Sonata].Stacks} &&!${Me.Buff[Selo's Sonata].ID}&& !${Me.Invis} && ${Me.AltAbilityReady[3704]} && ${Me.State.NotEqual[FEIGN]}) {
		/squelch /alt act 3704
	}
/return
|----------------------------------------------------------------------------
| SUB: SongQueue
|---------------------------------------------------------------------------- 
Sub SongQueue(string nextsong)
	/if (${Me.Casting.ID}) /stopcast
	/delay 10 !${Me.Casting.ID}
	/cast ${Me.Gem[${nextsong}]}
	/varset castready ${Math.Calc[(${Spell[${nextsong}].MyCastTime}/100)+5]}
/return

|----------------------------------------------------------------------------
| SUB: MemSongs
|---------------------------------------------------------------------------- 
Sub MemSongs(string memsong,int memgem)
	/if (${Me.Casting.ID}) /stopcast
	/delay 2s !${Me.Casting.ID}
	/if (${spellmisc}<${memgem}) {
			/echo Macro attempting memorize more songs than spell slots availiable. Ending.
			/end
	}
	/echo Memorizing ${memsong}
	/memspell ${memgem} "${memsong}"
	/delay 25
/return

|----------------------------------------------------------------------------
| SUB: SetupSongs
|---------------------------------------------------------------------------- 
Sub SetupSongs(string memsong,int memgem)
	|---SONG 1
	/if (${Me.Level}>=98 && ${Me.Book[${Spell[Doben's Spry Sonata].RankName}]} && !${FindItem[Darkened Breath of Harmony].ID})  {
		/varset song1 ${Spell[Doben's Spry Sonata].RankName}
	} else /if (${Me.Level}>=105 && ${Me.Book[${Spell[Arcane Melody].RankName}]})  {
		/varset song1 ${Spell[Arcane Melody].RankName}
	} else /if (${Me.Level}>=93 && ${Me.Book[${Spell[Terasal's Spry Sonata].RankName}]})  {
		/varset song1 ${Spell[Terasal's Spry Sonata].RankName}
	} else /if (${Me.Level}>=88 && ${Me.Book[${Spell[Sionachie's Spry Sonata].RankName}]})  {
		/varset song1 ${Spell[Sionachie's Spry Sonata].RankName}
	} else /if (${Me.Level}>=83 && ${Me.Book[${Spell[Dance of the Dragorn].RankName}]})  {
		/varset song1 ${Spell[Dance of the Dragorn].RankName}
	}
	/if (!${Me.Gem[${spellgem}].Name.Equal[${song1}]}&&${Me.Book[${song1}]}&&${BringYourOwnSpells}!=1) /call MemSongs "${song1}" ${spellgem}
	/if (${Me.Book[${song1}]}) /varcalc spellgem ${spellgem}+1
	|---SONG 2
	/if (${Me.Level}>=104 && ${Me.Book[${Spell[War March of Jocelyn].RankName}]})  {
		/varset song2 ${Spell[War March of Jocelyn].RankName}
	} else /if (${Me.Level}>=99 && ${Me.Book[${Spell[War March of Protan].RankName}]})  {
		/varset song2 ${Spell[War March of Protan].RankName}
	} else /if (${Me.Level}>=94 && ${Me.Book[${Spell[War March of Illdaera].RankName}]})  {
		/varset song2 ${Spell[War March of Illdaera].RankName}
	} else /if (${Me.Level}>=89 && ${Me.Book[${Spell[War March of Dagda].RankName}]})  {
		/varset song2 ${Spell[War March of Dagda].RankName}
	} else /if (${Me.Level}>=84 && ${Me.Book[${Spell[War March of Brekt].RankName}]})  {
		/varset song2 ${Spell[War March of Brekt].RankName}
	} 
	/if (!${Me.Gem[${spellgem}].Name.Equal[${song2}]}&&${BringYourOwnSpells}!=1) /call MemSongs "${song2}" ${spellgem}
	/if (${Me.Book[${song2}]}) /varcalc spellgem ${spellgem}+1
	|---SONG 3
	/if (${Me.Level}>=101 && ${Me.Book[${Spell[Aria of Maetanrus].RankName}]})  {
		/varset song3 ${Spell[Aria of Maetanrus].RankName}
	} else /if (${Me.Level}>=96 && ${Me.Book[${Spell[Aria of Va'Ker].RankName}]})  {
		/varset song3 ${Spell[Aria of Va'Ker].RankName}
	} else /if (${Me.Level}>=91 && ${Me.Book[${Spell[Aria of the Orator].RankName}]})  {
		/varset song3 ${Spell[Aria of the Orator].RankName}
	} else /if (${Me.Level}>=86 && ${Me.Book[${Spell[Aria of the Composer].RankName}]})  {
		/varset song3 ${Spell[Aria of the Composer].RankName}
	}
	/if (!${Me.Gem[${spellgem}].Name.Equal[${song3}]}&&${BringYourOwnSpells}!=1) /call MemSongs "${song3}" ${spellgem}
	/if (${Me.Book[${song3}]}) /varcalc spellgem ${spellgem}+1
	|---SONG 4
	/if (${Me.Level}>=104 && ${Me.Book[${Spell[Fjilnauk's Song of Suffering].RankName}]})  {
		/varset song4 ${Spell[Fjilnauk's Song of Suffering].RankName}
	} else /if (${Me.Level}>=99 && ${Me.Book[${Spell[Kaficus' Song of Suffering].RankName}]})  {
		/varset song4 ${Spell[Kaficus' Song of Suffering].RankName}
	} else /if (${Me.Level}>=94 && ${Me.Book[${Spell[Hykast's Song of Suffering].RankName}]})  {
		/varset song4 ${Spell[Hykast's Song of Suffering].RankName}
	} else /if (${Me.Level}>=89 && ${Me.Book[${Spell[Noira's Song of Suffering].RankName}]})  {
		/varset song4 ${Spell[Noira's Song of Suffering].RankName}
	} 
	/if (!${Me.Gem[${spellgem}].Name.Equal[${song4}]}&&${BringYourOwnSpells}!=1) /call MemSongs "${song4}" ${spellgem}
	/if (${Me.Book[${song4}]}) /varcalc spellgem ${spellgem}+1
	|---SONG 5
	/if (${Me.Level}>=101 && ${Me.Book[${Spell[Pulse of Sionachie].RankName}]})  {
		/varset song5 ${Spell[Pulse of Sionachie].RankName}
	} else /if (${Me.Level}>=96 && ${Me.Book[${Spell[Pulse of Salarra].RankName}]})  {
		/varset song5 ${Spell[Pulse of Salarra].RankName}
	} else /if (${Me.Level}>=91 && ${Me.Book[${Spell[Pulse of Lunanyn].RankName}]})  {
		/varset song5 ${Spell[Pulse of Lunanyn].RankName}
	} else /if (${Me.Level}>=86 && ${Me.Book[${Spell[Pulse of Renewal].RankName}]})  {
		/varset song5 ${Spell[Pulse of Renewal].RankName}
	} else /if (${Me.Level}>=82 && ${Me.Book[${Spell[Pulse of Rodcet].RankName}]})  {
		/varset song5 ${Spell[Pulse of Rodcet].RankName}
	} else /if (${Me.Level}>=77 && ${Me.Book[${Spell[Rhythm of Restoration].RankName}]})  {
		/varset song5 ${Spell[Rhythm of Restoration].RankName}
	} 
	/if (!${Me.Gem[${spellgem}].Name.Equal[${song5}]}&&${BringYourOwnSpells}!=1) /call MemSongs "${song5}" ${spellgem}
	/if (${Me.Book[${song5}]}) /varcalc spellgem ${spellgem}+1
	|--Broken Mirror Song
	/if (${Me.Level}>=101 && ${Me.Book[${Spell[Dichotomic Psalm].RankName}]})  {
		/varset bmsong ${Spell[Dichotomic Psalm].RankName}
	} 
	/if (!${Me.Gem[${spellgem}].Name.Equal[${bmsong}]}&&${BringYourOwnSpells}!=1) /call MemSongs "${bmsong}" ${spellgem}
	/if (${Me.Book[${bmsong}]}) /varcalc spellgem ${spellgem}+1
	|---AOE Mez
	/if (${Me.Level}>=105 && ${Me.Book[${Spell[Wave of Torpor].RankName}]})  {
		/varset aoemezsong ${Spell[Wave of Torpor].RankName}
	} else /if (${Me.Level}>=100 && ${Me.Book[${Spell[Wave of Quietude].RankName}]})  {
		/varset aoemezsong ${Spell[Wave of Quietude].RankName}
	} else /if (${Me.Level}>=95 && ${Me.Book[${Spell[Wave of the Conductor].RankName}]})  {
		/varset aoemezsong ${Spell[Wave of the Conductor].RankName}
	} else /if (${Me.Level}>=90 && ${Me.Book[${Spell[Wave of Dreams].RankName}]})  {
		/varset aoemezsong ${Spell[Wave of Dreams].RankName}
	} else /if (${Me.Level}>=85 && ${Me.Book[${Spell[Wave of Slumber].RankName}]})  {
		/varset aoemezsong ${Spell[Wave of Slumber].RankName}
	} 
	/if (!${Me.Gem[${spellgem}].Name.Equal[${aoemezsong}]}&&${Me.Book[${aoemezsong}]}&&${BringYourOwnSpells}!=1) /call MemSongs "${aoemezsong}" ${spellgem}
	/if (${Me.Book[${aoemezsong}]}) /varcalc spellgem ${spellgem}+1
	|---Aura Song
	/if (${Me.Level}>=105 && ${Me.Book[${Spell[Aura of Maetanrus].RankName}]})  {
		/varset aurasong ${Spell[Aura of Maetanrus].RankName}
	} else /if (${Me.Level}>=100 && ${Me.Book[${Spell[Aura of Va'Ker].RankName}]})  {
		/varset aurasong ${Spell[Aura of Va'Ker].RankName}
	} else /if (${Me.Level}>=95 && ${Me.Book[${Spell[Aura of the Orator].RankName}]})  {
		/varset aurasong ${Spell[Aura of the Orator].RankName}
	} else /if (${Me.Level}>=90 && ${Me.Book[${Spell[Aura of the Composer].RankName}]})  {
		/varset aurasong ${Spell[Aura of the Composer].RankName}
	} else /if (${Me.Level}>=85 && ${Me.Book[${Spell[Aura of the Poet].RankName}]})  {
		/varset aurasong ${Spell[Aura of the Poet].RankName}
	} 
	/if (!${Me.Gem[${spellgem}].Name.Equal[${aurasong}]}&&${Me.Book[${aurasong}]}&&${BringYourOwnSpells}!=1) /call MemSongs "${aurasong}" ${spellgem}
	/if (${Me.Book[${aurasong}]}) /varcalc spellgem ${spellgem}+1
	|--Slow Target
	/if (${Me.Level}>=64 && ${Me.Book[${Spell[Requiem of Time].RankName}]})  {
		/varset slowsong ${Spell[Requiem of Time].RankName}
	} 
	/if (!${Me.Gem[${spellgem}].Name.Equal[${slowsong}]}&&${Me.Book[${slowsong}]}&&${BringYourOwnSpells}!=1) /call MemSongs "${slowsong}" ${spellgem}
	/if (${Me.Book[${slowsong}]}) /varcalc spellgem ${spellgem}+1
	|---AE Slow Song
	/if (${Me.Level}>=99 && ${Me.Book[${Spell[Protan's Melodic Binding].RankName}]})  {
		/varset aeslowsong ${Spell[Protan's Melodic Binding].RankName}
	}
	/if (!${Me.Gem[${spellgem}].Name.Equal[${aeslowsong}]}&&${Me.Book[${aeslowsong}]}&&${BringYourOwnSpells}!=1) /call MemSongs "${aeslowsong}" ${spellgem}
	/if (${Me.Book[${aeslowsong}]}) /varcalc spellgem ${spellgem}+1
	|---Regen Song
	/if (${Me.Level}>=104 && ${Me.Book[${Spell[Silisia's Lively Crescendo].RankName}]})  {
		/varset regensong ${Spell[Silisia's Lively Crescendo].RankName}
	} else /if (${Me.Level}>=100 && ${Me.Book[${Spell[Motlak's Lively Crescendo].RankName}]})  {
		/varset regensong ${Spell[Motlak's Lively Crescendo].RankName}
	} else /if (${Me.Level}>=95 && ${Me.Book[${Spell[Kolain's Lively Crescendo].RankName}]})  {
		/varset regensong ${Spell[Kolain's Lively Crescendo].RankName}
	} else /if (${Me.Level}>=90 && ${Me.Book[${Spell[Lyssa's Lively Crescendo].RankName}]})  {
		/varset regensong ${Spell[Lyssa's Lively Crescendo].RankName}
	} else /if (${Me.Level}>=85 && ${Me.Book[${Spell[Gruber's Lively Crescendo].RankName}]})  {
		/varset regensong ${Spell[Gruber's Lively Crescendo].RankName}
	} 
	/if (!${Me.Gem[${spellgem}].Name.Equal[${regensong}]}&&${Me.Book[${regensong}]}&&${BringYourOwnSpells}!=1) /call MemSongs "${regensong}" ${spellgem}
	/if (${Me.Book[${regensong}]}) /varcalc spellgem ${spellgem}+1
/return
|----------------------------------------------------------------------------
| SUB: INIChanges
|---------------------------------------------------------------------------- 
Sub INIChanges
	/varset changetoini 0
	/call SetIni General FollowToonName string "${FollowToonName}"
	/call SetIni General UseFellowship		int ${UseFellowship}
	/call SetIni General UseMelee			int ${UseMelee}
	/call SetIni General InstantRelease		int ${InstantRelease}
	/call SetIni General AutoCampHold		int ${AutoCampHold}
	/call SetIni General BringYourOwnSpells	int ${BringYourOwnSpells}
/return